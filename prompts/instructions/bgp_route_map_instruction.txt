------Instruction:-------------
*** Configuration format ***:
The configuration for each node should start with Configuration of {node_name}:

*** Route-map configuration ***:
1. For a node A in the target topology T1, first find the node B in example topology T2 that matches this node from the matching relationship list provided above.
2. Then, find the configuration of the matched node B. Based on the configuration of the matched node B, infer the configuration of node A regarding its each neighbor."

Format requirements for the route-map policy configuration of a node is :
Naming Convention:
Import Route-Map: RMap_{node}_from_{neighbor}
Export Route-Map: RMap_{node}_to_{neighbor}
Replace {node} and {neighbor} with actual node name and its neighbor name (no placeholders like ANY).

Configuration Structure:
!
route-map {rmap_name} {permit|deny} {sequence_number}
match {match_type} {predefined_match_id}
set {set_type} {set_value}
!

OR (empty clause):
!
route-map {rmap_name} {permit|deny} {sequence_number}
!

Rules:
1. When you specify a match type, you should follow the given configuration example.
2. If a route-map contains a match statement, you must first define the match conditions. Supported match types include:
1) community (community-list)
All match statements must reference the predefined conditions.
3. {match_id} must be an integer only (e.g., 1, 10; not 100:0).
4. Separate route-maps for different neighbors with !.


*** Bgp basic configuration ***:
1. For a node A in the target topology T1, first identify the ip address and AS of its each neighbor from the edge information of target topology T1.
2. Generate full BGP configuration based on the neighbor's' ip addresses, AS, and route-map policy configuration. If the node uses the community tags to control routing decisions, the bgp configuration should includes send-community configuration for each neighbor. Note: You must guarantee that the ip address and AS of the neighbor is correct in the generated configuration.
--------------------------------